// MIXINS //
@import "mixins";




body {
  padding: $padding-default;
  background-color: $color-bg;

  @include screen-md {
    padding: $padding-default * 0.5;
  }

  @include screen-sm {
    padding: 0 $padding-default * 0.5;
  }

  @include screen-xs {
    padding: 0 $padding-default * 0.5;
  }
}

.icon {
  width: 80%;
  height: 80%;
  font-size: $font-size;
  max-width: $icon-size;
  max-height: $icon-size;
  min-width: $icon-size * 0.5;
  min-height: $icon-size * 0.5;
  //vertical-align: middle; // weird seems to hang from middle wtf?!
  color: inherit;
  -webkit-text-fill-color: inherit;
  transition: inherit;

  @each $size, $value in $all-icon-sizes {
    &.#{$size} {
      @include set-max-wh-size($value);
    }
  }
}

@each $num, $value in $all-icon-nums {
  .#{$num} {
    @extend .icon;

    width: $value;
  }
}

// screen show / hide / props //

.hide-xs {
  @include screen-xs {
    display: none;
  }
}

.hide-sm {
  @include screen-sm {
    display: none;
  }
}

.hide-md {
  @include screen-md {
    display: none;
  }
}

.hide-lg {
  @include screen-lg {
    display: none;
  }
}

.hide-xl {
  @include screen-xl {
    display: none;
  }
}

.hide-xxl {
  @include screen-xxl {
    display: none;
  }
}

.hide-sm-down {
  @extend .hide-xs;
  @extend .hide-sm;
}

.hide-md-down {
  @extend .hide-xs;
  @extend .hide-sm;
  @extend .hide-md;
}

.hide-lg-down {
  @extend .hide-xs;
  @extend .hide-sm;
  @extend .hide-md;
  @extend .hide-lg;
}

.hide-xl-down {
  @extend .hide-xs;
  @extend .hide-sm;
  @extend .hide-md;
  @extend .hide-lg;
  @extend .hide-xl;
}

.hide-sm-up {
  @extend .hide-sm;
  @extend .hide-md;
  @extend .hide-lg;
  @extend .hide-xl;
  @extend .hide-xxl;
}

.hide-md-up {
  @extend .hide-md;
  @extend .hide-lg;
  @extend .hide-xl;
  @extend .hide-xxl;
}

.hide-lg-up {
  @extend .hide-lg;
  @extend .hide-xl;
  @extend .hide-xxl;
}

.hide-xl-up {
  @extend .hide-xl;
  @extend .hide-xxl;
}

.min-half {
  min-width: 50%;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.transition {
  transition: $transition-default;
}

.transition-fast {
  transition: $transition-default * 0.5;
}

.transition-slow {
  transition: $transition-default * 2;
}

.no-pad {
  padding: 0;
}

.no-margin {
  margin: 0;
}

.no-margin-l {
  margin-left: 0;
}

.no-margin-r {
  margin-right: 0;
}

.no-margin-x {
  margin-left: 0;
  margin-right: 0;
}

.no-margin-y {
  margin-top: 0;
  margin-bottom: 0;
}

.no-overflow {
  overflow: hidden;
}

.overflow-auto-x {
  overflow-x: auto;
}

.flex-row,
.flex-col {
  display: flex;
  flex-wrap: wrap;
}

.no-wrap {
  flex-wrap: nowrap;
}

.flex-row {
  flex-direction: row;
  align-items: center;
}

.flex-col {
  flex-direction: column;
  justify-items: center;
}

.flex-between {
  justify-content: space-between;
}

.flex-around {
  justify-content: space-around;
}

.flex-auto {
  flex: auto;
}

.flex-start {
  justify-content: flex-start;
}

.flex-end {
  justify-content: flex-end;
}

.align-center {
  align-items: center;
}

.display-inline {
  display: inline;
}

.display-inline-b {
  display: inline-block;
}

.margin {
  margin: $margin-default;
}

.m-1 {
  margin: $unit-default;
}

.m-2 {
  margin: $unit-default * 2;
}

// INPUTS && CONTROLS TO BE SEPARATED //

input {
  height: $unit-default * 1.4;
  min-width: $unit-default * 2;
  background-color: transparent;
  border-style: solid;
  border-spacing: $border-size;
  border-color: $color-fore;
  margin: $margin-default * 0.5 $margin-default;
  padding: $padding-default * 0.5 $padding-default;
  transition: $transition-default;

  &::placeholder {
    opacity: 0.5;
  }

  @each $status, $value in $all-status-border-colours {
    &.#{to-upper-case($status)} {
      border-color: $value;
    }
  }

  &.DISABLED {
    pointer-events: none;

    &:focus {
      outline: none;
    }
  }
}

button {
  text-align: center;
  font-size: $font-size;
  vertical-align: middle;
  transition: $transition-default;
  padding: $padding-default * 0.1;
  margin: $margin-default * 0.25 $margin-default;

  &:hover {
    transform: scale($hover-scale);
  }

  @each $size, $value in $all-font-sizes {
    &.#{$size} {
      font-size: $value;
    }
  }

  @each $status, $value in $all-status-border-colours {
    &.#{to-upper-case($status)} {
      svg {
        fill: $value;
      }
    }
  }

  &.DISABLED {
    pointer-events: none;

    &:focus {
      outline: none;
    }
  }
}

@each $color, $value in $all-colours {
  .stroke-#{$color} {
    stroke: $value;
  }

  .fill-#{$color} {
    fill: $value;
  }

  .color-#{$color} {
    color: $value;
    -webkit-text-fill-color: $value;
  }

  .bg-#{$color} {
    background-color: $value;
  }

  .border-#{$color} {
    border: $border-size solid $value;
  }
}

.status.bar {
  $offPos: -5px;

  position: absolute;
  left: $offPos;
  right: 105%;
  height: 0;
  bottom: $offPos;
  z-index: -1;
  background-color: transparent;
  transition: background-color 0.6s, right 0.6s, height 1s;

  @each $status, $value in $all-status-colours {
    &.#{to-upper-case($status)} {
      right: $offPos;
      background-color: $value;
      height: $unit-default * 0.5;
      transition: right 0.6s;

      @include screen-xs {
        height: $unit-default * 0.75;
      }
      @include screen-sm {
        height: $unit-default * 0.75;
      }
    }
  }

  &.WAITING {
    transition: right 6s;
  }

  &.COMPLETE {
    left: $offPos;
    right: $offPos;
    height: 0;
    bottom: $offPos;
  }
}

//.fade-enter-active,
//.fade-leave-active,
//.move-enter-active,
//.move-leave-active {
//  transition: all $transition-default * 5;
//}
//
//.fade-enter
//  /* .fade-leave-active below version 2.1.8 */ {
//  opacity: 0;
//  transform: translateY($unit-default * -1);
//}
//
//.fade-leave-to
//  /* .fade-leave-active below version 2.1.8 */ {
//  opacity: 0;
//  transform: translateY($unit-default);
//}
//
//.fade-leave-active {
//  //position: absolute;
//}
//
//.move-item {
//  //transition: $transition-default * 2;
//  display: inline-block;
//  width: 100%;
//}
//
//.move-enter,
//.move-leave-to
//  /* .move-leave-active below version 2.1.8 */ {
//  opacity: 0;
//  transform: translateY($unit-default * -1);
//}
//
//
//.move-move {
//  position: absolute;
//}


.list-item {
  width: 100%;
  //transition: all $transition-default * 2 ease-out;
}

/* base */
.list-anim {
  backface-visibility: hidden;
  z-index: 1;
}

/* moving */
.list-anim-move {
  transition: all $transition-default ease-in-out 100ms;
}

/* appearing */
.list-anim-enter-active {
  transition: all $transition-default ease-out;
}

/* disappearing */
.list-anim-leave-active {
  transition: all $transition-default ease-in;
  position: absolute;
  z-index: 0;
}

/* appear at / disappear to */
.list-anim-enter,
.list-anim-leave-to {
  opacity: 0;
}

.list-anim-enter {
  transform: translateY($unit-default * -1);
}

.list-anim-leave-to {
  transform: translateY($unit-default);
}
