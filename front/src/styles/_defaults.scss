body {
  padding: $padding-default;
  background-color: $color-bg;
}

.icon {
  width: 80%;
  height: 80%;
  max-width: $icon-size;
  max-height: $icon-size;
  vertical-align: middle;

  @each $size, $value in $all-icon-sizes {
    &.#{$size} {
      max-width: $value;
      max-height: $value;
    }
  }
}

@each $num, $value in $all-icon-nums {
  .#{$num} {
    @extend .icon;
    width: $value;
  }
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-bold {
  font-weight: bolder;
}

.name {
  text-transform: capitalize;
}

.upper {
  text-transform: uppercase;
}

.lower {
  text-transform: lowercase;
}

.min-half {
  min-width: 50%;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.transition {
  transition: $transition-default;
}

.transition-fast {
  transition: $transition-default * 0.5;
}

.transition-slow {
  transition: $transition-default * 2;
}

.no-pad {
  padding: 0;
}

.no-margin {
  margin: 0;
}

.no-margin-l {
  margin-left: 0;
}

.no-margin-r {
  margin-right: 0;
}

.no-margin-x {
  margin-left: 0;
  margin-right: 0;
}

.no-margin-y {
  margin-top: 0;
  margin-bottom: 0;
}

.no-overflow {
  overflow: hidden;
}

.overflow-auto-x {
  overflow-x: auto;
}

.flex-row,
.flex-col {
  display: flex;
  flex-wrap: wrap;
}

.no-wrap {
  flex-wrap: nowrap;
}

.flex-row {
  flex-direction: row;
  align-items: center;
}

.flex-col {
  flex-direction: column;
  justify-items: center;
}

.flex-between {
  justify-content: space-between;
}

.flex-around {
  justify-content: space-around;
}

.flex-auto {
  flex: auto;
}

.flex-start {
  justify-content: flex-start;
}

.flex-end {
  justify-content: flex-end;
}

.align-center {
  align-items: center;
}

.display-inline {
  display: inline;
}

.display-inline-b {
  display: inline-block;
}

.m-de {
  margin: $margin-default;
}

.m-1 {
  margin: $unit-default;
}

.m-2 {
  margin: $unit-default * 2;
}

small,
p,
h1,
h2,
h3,
h4,
h5,
h6,
text,
span,
div,
.text,
input,
button,
.icon {
  color: $color-fore;
  -webkit-text-fill-color: $color-fore;
  fill: $color-fore;
  font-size: $font-size;
}

input {
  margin: $margin-default * 0.5 $margin-default;
}

button {
  color: $color-fore;
  -webkit-text-fill-color: $color-fore;
  font-size: $font-size;
  margin: $margin-default * 0.25 $margin-default;
  padding: $padding-default * 0.1;
  transition: $transition-default;
  text-align: center;
  vertical-align: middle;

  &:hover {
    transform: scale(1.066);
  }

  @each $size, $value in $all-font-sizes {
    &.#{$size} {
      font-size: $value;
    }
  }
}

// TEXT SIZES
small {
  font-size: $font-size-sm;
  font-weight: lighter;
}

p,
span {
  font-size: $font-size;
  font-weight: normal;
}

h5,
h6 {
  font-size: $font-size-md;
  font-weight: bolder;
}

h3,
h4 {
  font-size: $font-size-xl;
  font-weight: bolder;
}

h1,
h2 {
  font-size: $font-size-xl * 1.1;
  font-weight: bolder;
}

p,
div,
.text {
  @each $size, $value in $all-font-sizes {
    &.#{$size} {
      font-size: $value;
    }
  }
}

.DISABLED {
  opacity: 0.3;
  pointer-events: none;

  &:focus {
    outline: none;
  }

  & input {
    border: $border-size solid rgba($color-fore, 0.5);
  }
}

.SELECT {
  background-color: $color-select;
}

.ERROR {
  input {
    border: $border-size solid $color-warning;
  }
}

.SUCCESS {
  input {
    border: $border-size solid $color-success;
  }
}

@each $color, $value in $all-colours {
  .stroke-#{$color} {
    stroke: $value;
  }

  .fill-#{$color} {
    fill: $value;
  }

  .color-#{$color} {
    color: $value;
    -webkit-text-fill-color: $value;
  }

  .bg-#{$color} {
    background-color: $value;
  }
}


.status.bar {
  position: absolute;
  left: -1px;
  right: 101%;
  top: -1px;
  bottom: 0;
  z-index: 0;
  background-color: transparent;
  transition: background-color 1s, right 0.6s;

  &.WAITING {
    transition: background-color 1s, right 6s;
    background-color: $color-status-waiting;
  }

  &.SUCCESS {
    transition: background-color 1s, right 0.6s;
    background-color: $color-status-success;
  }

  &.ERROR {
    transition: background-color 1s, right 0.6s;
    background-color: $color-status-error;
  }

  &.WAITING,
  &.SUCCESS,
  &.ERROR {
    right: 0;
    //&.DONE {
    //  line-height: unset;
    //  transition: 0.1s;
    //  //background-color: transparent;
    //}
  }
}


//.fade-enter-active,
//.fade-leave-active,
//.move-enter-active,
//.move-leave-active {
//  transition: all $transition-default * 5;
//}
//
//.fade-enter
//  /* .fade-leave-active below version 2.1.8 */ {
//  opacity: 0;
//  transform: translateY($unit-default * -1);
//}
//
//.fade-leave-to
//  /* .fade-leave-active below version 2.1.8 */ {
//  opacity: 0;
//  transform: translateY($unit-default);
//}
//
//.fade-leave-active {
//  //position: absolute;
//}
//
//.move-item {
//  //transition: $transition-default * 2;
//  display: inline-block;
//  width: 100%;
//}
//
//.move-enter,
//.move-leave-to
//  /* .move-leave-active below version 2.1.8 */ {
//  opacity: 0;
//  transform: translateY($unit-default * -1);
//}
//
//
//.move-move {
//  position: absolute;
//}


.list-item {
  width: 100%;
  //transition: all $transition-default * 2 ease-out;
}

/* base */
.list-anim {
  backface-visibility: hidden;
  z-index: 1;
}

/* moving */
.list-anim-move {
  transition: all $transition-default ease-in-out 100ms;
}

/* appearing */
.list-anim-enter-active {
  transition: all $transition-default ease-out;
}

/* disappearing */
.list-anim-leave-active {
  transition: all $transition-default ease-in;
  position: absolute;
  z-index: 0;
}

/* appear at / disappear to */
.list-anim-enter,
.list-anim-leave-to {
  opacity: 0;
}

.list-anim-enter {
  transform: translateY($unit-default * -1);
}

.list-anim-leave-to {
  transform: translateY($unit-default);
}
